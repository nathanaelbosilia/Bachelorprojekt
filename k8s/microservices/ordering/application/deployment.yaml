apiVersion: apps/v1
kind: Deployment
metadata:
  name: ordering-application
  namespace: microservices
  labels:
    app: ordering-application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ordering-application
  template:
    metadata:
      name: ordering-application
      labels:
        app: ordering-application
      annotations:
        chaos-mesh.org/target: "true"
    spec:
      containers:
        - name: ordering-application
          image: nbosilia/eshop-ms-ordering:latest
          ports:
            - containerPort: 8080
          env:
            - name: SERVER_PORT
              value: "8080"
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://ordering-postgres-db:5432/ordering
            - name: SPRING_DATASOURCE_PASSWORD
              value: ordering
            - name: SPRING_DATASOURCE_USERNAME
              value: ordering
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: my-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 100m   # 100 millicores (0.1 vCPU)
              memory: 256Mi  # 256 Megabytes
            limits:
              cpu: 250m   # 250 millicores (0.25 vCPU)
              memory: 512Mi  # 512 Megabytes
      restartPolicy: Always
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command: ['sh', '-c', 'until nc -zv ordering-postgres-db 5432; do echo waiting for postgres; sleep 2; done;']
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
            limits:
              cpu: 50m
              memory: 512Mi